name: compile
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag'
        required: false
jobs:
  check:
    name: Check Access
    runs-on: ubuntu-latest
    steps:
      - name: "Check access"
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}


  telegram-bot-api-binary: # complie telegram-bot-api-binary
    name: telegram-bot-api-binary
    runs-on: ubuntu-latest
    steps:
      # - name: update dependence
      #   run: sudo apt-get update && sudo apt-get upgrade
      - name: install dependencies
        run: sudo apt install -y openssl zlib1g gcc g++ gperf cmake make curl wget git
      - name: Checkout
        uses: actions/checkout@v2
      - name: clone repo
        run: |
              git clone --recursive https://github.com/tdlib/telegram-bot-api.git
              git status telegram-bot-api >> telegram-bot-api-status
      - name: Cache Bot API Binary
        id: cache-bot-api
        uses: actions/cache@v2
        with:
          path: telegram-bot-api-binary
          key: CI-telegram-bot-api-${{ hashFiles('telegram-bot-api-status') }}
      - name: build	
        if: steps.cache-bot-api.outputs.cache-hit != 'true'
        run: |
          cd telegram-bot-api
          rm -rf build
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --target install
          cd ../..
          ls -l telegram-bot-api/build/telegram-bot-api*
          cp telegram-bot-api/build/telegram-bot-api telegram-bot-api-binary
      - name: Upload Binary
        uses: actions/upload-artifact@master
        with:
          name: telegram-bot-api-binary
          path: telegram-bot-api-binary

  bird: # complie bird
    name: bird
    runs-on: ubuntu-latest
    steps:
      - name: install dependencies
        run: sudo apt install -y gcc make autoconf flex bison libncurses-dev libreadline-dev
      - name: Checkout
        uses: actions/checkout@v2
      - name: clone repo
        run: |
              wget https://bird.network.cz/download/bird-2.0.10.tar.gz
      - name: Cache Bird Binary
        id: cache-bird-binary
        uses: actions/cache@v2
        with:
          path: bird-binary
          key: CI-birdc-${{ hashFiles('bird-2.0.10.tar.gz') }}
      - name: build
        if: steps.cache-bird-binary.outputs.cache-hit != 'true'
        run: |
          tar -xzf bird-2.0.10.tar.gz
          cd bird-2.0.10
          autoreconf -i
          ./configure
          make
          cd ..
          cp bird-2.0.10/bird bird-binary
          cp bird-2.0.10/birdc birdc-binary
          ls
      - name: Upload Binary
        uses: actions/upload-artifact@master
        with:
          name: bird-binary
          path: bird?-binary



  publish:
    needs:
      - telegram-bot-api-binary
      - bird
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Telegram Bot API Binary
        uses: actions/download-artifact@master
        with:
          name: telegram-bot-api-binary
          path: .
      - name: Download Bird Binary
        uses: actions/download-artifact@master
        with:
          name: bird-binary
          path: .
      - name: Release
        run: |
          wget -O ghr.tar.gz https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz
          tar -xvf ghr.tar.gz
          mv ghr*linux_amd64/ghr .
          mkdir bin
          ls -l
          find . -name "telegram-bot-api-binary" -exec cp {} bin \;
          ./ghr -delete -t "${{ github.token }}" -n "${{ github.event.inputs.tag }}" "${{ github.event.inputs.tag }}" telegram-bot-api-binary bird-binary birdc-binary
  



      
