name: telegram local api build
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release Tag'
        required: false
jobs:
  check:
    name: Check Access
    runs-on: ubuntu-latest
    steps:
      - name: "Check access"
        uses: "lannonbr/repo-permission-check-action@2.0.0"
        with:
          permission: "write"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: update dependence
        run: sudo apt-get update && sudo apt-get upgrade
      - name: install dependencies
        run: sudo apt install -y openssl zlib1g gcc g++ gperf cmake make curl wget git
      - name: Checkout
        uses: actions/checkout@v2
      - name: clone repo
        run: |
              git clone --recursive https://github.com/tdlib/telegram-bot-api.git
              git status telegram-bot-api >> telegram-bot-api-status
      - name: Cache Bot API Binary
        id: cache-bot-api
        uses: actions/cache@v2
        with:
          path: telegram-bot-api-binary
          key: CI-telegram-bot-api-${{ hashFiles('telegram-bot-api-status') }}
      - name: build	
        if: steps.cache-bot-api.outputs.cache-hit != 'true'
        run: |
          cd telegram-bot-api
          rm -rf build
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          cmake --build . --target install
          cd ../..
          ls
          find . -name "telegram-bot-api-binary"
          ls -l telegram-bot-api/build/telegram-bot-api*
          cp telegram-bot-api/build/telegram-bot-api telegram-bot-api-binary
      - name: Upload Binary
        uses: actions/upload-artifact@master
        with:
          name: telegram-bot-api-binary
          path: telegram-bot-api-binary
      - name: release
        uses: elgohr/Github-Release-Action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          title: telegram-bot-api-binary
        



      
